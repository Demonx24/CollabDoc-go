
services:
  onlyoffice-documentserver:
    image: onlyoffice/documentserver
    container_name: onlyoffice-documentserver
    ports:
      - "8082:80"
    restart: unless-stopped
    volumes:
      - E:/docker/onlyoffice/onlyoffice-data:/var/www/onlyoffice/Data
      - E:/docker/onlyoffice/onlyoffice-logs:/var/log/onlyoffice
    environment:
      - JWT_ENABLED=false

  nginx:
    image: nginx:latest
    container_name: onlyoffice-nginx
    restart: unless-stopped
    ports:
      - "80:80"       # 反向代理对外端口80
    volumes:
      - E:/go代码/CollabDoc-go/docker/onlyoffice.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - onlyoffice-documentserver

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - E:/docker/zookeeper/data:/bitnami/zookeeper
  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - E:/docker/kafka/data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092      # Kafka Broker 地址
      - KAFKA_CLUSTERS_0_NAME=collabdoc-cluster
    ports:
      - "9000:8080"  # 映射 UI 端口
    depends_on:
      - kafka
    restart: unless-stopped
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - E:/docker/redis/data:/data

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: collabDoc
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    volumes:
      - E:/docker/mysql:/var/lib/mysql


  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped
    volumes:
      - E:/docker/mongo/data:/data/db
      - E:/docker/mongo/configdb:/data/configdb
